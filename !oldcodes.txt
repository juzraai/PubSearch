régi init kezelés:


        /*
         * try {
         * Connection.init(); // azért inicializálunk itt, hogy ne futás közben fagyjon ki a program
         * primaryStage.show();
         * } catch (SQLException ex) {
         * ((MainWindow) primaryStage).configWindow.show();
         * } catch (Throwable t)
         * {
         * // TODO más kivételt a JPA dobhat, arra valami AlertBox szerû cucc kéne
         * t.printStackTrace();
         * System.exit(1);
         * }
         */


            /*
             * try {
             * Connection.init();
             * configIsOK = true;
             * ConfigModel.save();
             * } catch (Throwable t) {
             * configIsOK = false;
             * msgLabel.setText("Nem sikerült felépíteni a kapcsolatot.");
             * return;
             * }
             */


AWindow, try #1

protected AWindow(String title, boolean resizable, boolean modal) {
        setTitle(title);
        setResizable(resizable);
        if (modal) {
            initModality(Modality.APPLICATION_MODAL);
        }
        //setScene(buildScene());
        getScene().getStylesheets().add("pubsearch/gui/style.css");
    }



link aboutwin-ben

/*EventHandler<MouseEvent> linkOnMouseOver = new EventHandler<MouseEvent>() {

            public void handle(MouseEvent event) {
                ((Text) event.getSource()).setUnderline(true);
                ((Text) event.getSource()).setFill(Color.web("#AADDFF"));
            }
        };
        EventHandler<MouseEvent> linkOnMouseOut = new EventHandler<MouseEvent>() {

            public void handle(MouseEvent event) {
                ((Text) event.getSource()).setUnderline(false);
                ((Text) event.getSource()).setFill(Color.web("#66AAFF"));
            }
        };*/

      
        /*Text web1 = new Text("Web");
        web1.setFill(Color.WHITE);
        web1.setEffect(shadow);
        final Text web2 = new Text("SourceForge projekt: 'PubSearch'");
        web2.setCursor(Cursor.HAND);
        web2.setFill(Color.web("#66AAFF"));
        web2.setEffect(shadow);
        web2.setOnMouseEntered(linkOnMouseOver);
        web2.setOnMouseExited(linkOnMouseOut);*/   



storee with upd

public Publication isAlreadyExists() {
        List<Publication> pl = Connection.getEm().createQuery("SELECT p FROM Publication p WHERE p.title=\"" + title + "\" AND p.year=" + year).getResultList();
        if (pl.isEmpty()) {
            return null;
        } else {
            return pl.get(0);
        }
    }

    /**
     * Meghívja a BaseEntity-ben definiált store() metódust, ami kivételelnyeléssel
     * kiadja a parancsot az objektum adatbázisba való feltöltésére.
     * @deprecated Publikáció esetén nem érdemes használni, mert azonos címû és
     * évszámú publikációk többször bekerülnek így, ami felesleges. Használd inkább
     * a storeWithUpdate() metódust.
     */
    /*@Override
    public void store() {
        super.store();
        System.err.println("Please use storeWithUpdate() instead to avoid redundant publications in the database.");
    }*/
    /**
     * Meghívja a BaseEntity-en definiált store() metódust, ami kivételelnyeléssel
     * kiadja a parancsot az objektum adatbázisba való feltöltésére.
     * Ezt a metódust csak akkor érdemes hívni, ha tudjuk, hogy a publikáció még
     * nincs eltárolva az adatbázisban, különben többszöri elõfordulást kapunk.
     */
    private void storeWithInsert() {
        super.store();
    }

    /**
     * Ellenõrzi, hogy az adott publikáció benne van-e már az adatbázisban, és ennek
     * megfelelõen végzi el a mentést. Ha még nincs fent, a storeWithInsert-et használja,
     * ha már fent van, akkor pedig lekérdezi a fent lévõt, és azt frissíti.
     */
    public void storeWithUpdate() {
        Publication p = isAlreadyExists();
        if (null == p) {
            storeWithInsert();
        } else {
            // update all fields except id/title/year
            // TODO ÁTGONDOLNI !!!!!!
            // TODO ALGORITMUS ALAPJÁN UPDATE, NEM ÉSZNÉLKÜL!!

            /*
             * if ((null == p.bibtex && null != bibtex)||(null != p.bibtex && null!=bibtex && p.bibtex.length()<bibtex.length())){
             * p.bibtex = bibtex;
             * p.authors = authors;
             * }
             *
             *
             *
             * //itt még végig kéne állítani!!!!!!
             * p.getCitedBy().addAll(citedBy);
             * p.getCites().addAll(cites);
             * p.getLinks().addAll(links);
             * p.storeWithInsert();
             */
        }
    }