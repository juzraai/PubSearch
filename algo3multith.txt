kell: ResultListCrawler(PDatabase,url,querystring,transLevel)


Crawler(au,ti,translev):
	ciklus (minden pdb-re)
		összeállítja a querystring-et
		elindít egy ResultListCrawler szálat
	ciklus
		ha interrupted, interrupt-olja a RLC szálakat is
		megvárja amíg az RLC szálak befejezõdnek

ResultListCrawler(pdb,url,querystring,method,translev) // url&method azért, mert ezzel fogjuk a citedBy-listákat is
	startindex=pdb.getstartindex
	do
		ha interrupted, akkor break
		letölt(baseurl,querystring,method)
		linkeket kiszed
		newcount=newlist.size
		ha már voltak ezek a linkek: break
		ciklus (minden linkre && !interrupted)
			elindít egy PubPageCrawler szálat
		ha liinwww: newcount=rpp
	while (newcount==rpp)
	ciklus
		ha interrupted, interrupt-olja a PPC szálakat is
		megvárja amíg az PPC szálak befejezõdnek
	ciklus
		lekéri a PPC szálaktól a Publication-öket, listába teszi

PubPageCrawler(pdb,url,transLev)
	letölt
	kiszedi az adatokat és megtisztítja, ha kell letölti a bibtex oldalt és úgy
	ha transLev>0:
		ha ki tud szedni citedByList linket:
			elindít egy RLC szálat (pdb,url,null,translev-1)
			megvárja, míg befejezõdik
			lekéri a Publication-listát
		ha nem:
			kiszedi a html-bõl, block-onként
			lekéri a Publication-t, módosítja, persist
			listába teszi a Publication-t
	lekéri a Publication-t, módosítja, a citedBy listát is, persist